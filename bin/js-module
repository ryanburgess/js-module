#!/usr/bin/env node

var mkdirp    = require('mkdirp'),
  fs          = require('fs'),
  path        = require('path'),
  pkg         = require('../package.json'),
  version     = pkg.version,
  dir         = path.dirname(),
  readme      = 'Project'+ '\n' +'============='+ '\n \n',
  indexJS     = 'module.exports = function(){'+ '\n' + '}',
  gitignore   = '.DS_Store'+ '\n' + '~*'+ '\n' + '*.bak'+ '\n' + '*.tmp'+ '\n' + '.sass-cache'+ '\n' + '*.log'+ '\n' + 'node_modules/';

readme += '## Release History'+ '\n' +
'* 0.1.0: Initial release.'+ '\n \n';

readme += '## Contributing'+ '\n \n' +
'1. Fork it'+ '\n' +
'2. Create your feature branch (`git checkout -b my-new-feature`)'+ '\n' +
'3. Commit your changes (`git commit -am "Add some feature"`)'+ '\n' +
'4. Push to the branch (`git push origin my-new-feature`)'+ '\n' +
'5. Create new Pull Request';

write(dir + '/README.md', readme);
write(dir + '/.gitignore', gitignore);

// create Gruntfile
fs.readFile(path.join(__dirname, '../Gruntfile.js'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  write(dir + '/Gruntfile.js', data);
});

// create package.json
fs.readFile(path.join(__dirname, '../temp.json'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  write(dir + '/package.json', data);
});

function write(path, str, mode) {
  fs.writeFileSync(path, str, { mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}
function mkdir(path, fn) {
  mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
}

console.log('Project generated ' + version);