#!/usr/bin/env node

var mkdirp      = require('mkdirp'),
  fs            = require('fs'),
  path          = require('path'),
  prompt        = require('prompt'),
  pkg           = require('../package.json'),
  version       = pkg.version,
  dir           = path.dirname(),
  packageName   = '',
  readme        = '',
  indexJS       = '',
  moduleName    = '',
  version       = '',
  description   = '',
  github        = '',
  author        = '',
  main          = '',
  license       = '',
  gitignore     = '';

prompt.message = 'JS Module'.magenta;
prompt.delimiter = ' ';
prompt.start();

prompt.get(['module name', 'version', 'description', 'main file', 'github', 'author', 'license'], function (err, result) {

  moduleName = result.name;
  version = result.version;
  description = result.description;
  main = result.main;
  github = result.github;
  author = result.author;
  license = result.license;

  packageName = moduleName.replace(/\s+/g, '-').toLowerCase();

  if(main === ''){
    main = 'index.js';
  }

  if(license === ''){
    license = 'MIT';
  }

  indexJS = 'module.exports = function(){'+ '\n  \'use strict\';'+ '\n' + '};';
  gitignore = '.DS_Store'+ '\n' + '~*'+ '\n' + '*.bak'+ '\n' + '*.tmp'+ '\n' + '.sass-cache'+ '\n' + '*.log'+ '\n' + 'node_modules/';
  
  write(dir + '/.gitignore', gitignore);
  write(dir + '/index.js', indexJS);

  // create package.json
  fs.readFile(path.join(__dirname, '../temp.json'), 'utf8', function (err,data) {
    if (err) {
      return console.log(err);
    }
    data = data.replace(/\{{package}}/g, packageName)
    .replace(/\{{description}}/g, description)
    .replace(/\{{version}}/g, version)
    .replace(/\{{main}}/g, main)
    .replace(/\{{github}}/g, github)
    .replace(/\{{author}}/g, author)
    .replace(/\{{license}}/g, license);

    write(dir + '/package.json', data);
  });

  // create readme
  fs.readFile(path.join(__dirname, '../temp-readme.md'), 'utf8', function (err,data) {
    if (err) {
      return console.log(err);
    }
    data = data.replace(/\{{package}}/g, packageName)
    .replace(/\{{name}}/g, moduleName)
    .replace(/\{{description}}/g, description)
    .replace(/\{{version}}/g, version)
    .replace(/\{{main}}/g, main)
    .replace(/\{{github}}/g, github)
    .replace(/\{{author}}/g, author)
    .replace(/\{{license}}/g, license);
    write(dir + '/README.md', data);
  });

  function write(path, str, mode) {
    fs.writeFileSync(path, str, { mode: mode || 0666 });
    console.log('   \x1b[36mcreate\x1b[0m : ' + path);
  }
  function mkdir(path, fn) {
    mkdirp(path, 0755, function(err){
      if (err) {
        return err;
      }
      console.log('   \033[36mcreate\033[0m : ' + path);
      return fn && fn();
    });
  }

  console.log('JS Module ' + version);
});